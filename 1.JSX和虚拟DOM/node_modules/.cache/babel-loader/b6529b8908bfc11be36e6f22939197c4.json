{"ast":null,"code":"var _jsxFileName = \"/Users/honghuaqi/Desktop/react/my-test/src/App.js\";\nimport React from 'react';\nlet element = /*#__PURE__*/React.createElement(\"h1\", {\n  className: \"title\",\n  style: {\n    color: 'red'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 15\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, \"hello\"), \"world\");\nlet element1 = React.createElement('h1', {\n  className: 'title',\n  style: {\n    color: 'red'\n  }\n}, React.createElement('span', null, 'hello'), 'world');\n/*\nelement =》 element1 =》 虚拟dom\n1. element 进过 babel 转义成 React.createElement 的形式\n2. React 内部 React.createElement 方法执行后的结果，就是一个虚拟 dom，打印后类似下面结构\n{\n  type: 'h1',\n  props: {\n    children: 'hello'\n  }\n}\n\n*/\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"App\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/honghuaqi/Desktop/react/my-test/src/App.js"],"names":["React","element","color","element1","createElement","className","style","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAIC,OAAO,gBAAG;AAAI,EAAA,SAAS,EAAC,OAAd;AAAsB,EAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADY,UAAd;AAMA,IAAIC,QAAQ,GAAGH,KAAK,CAACI,aAAN,CAAoB,IAApB,EAA0B;AACvCC,EAAAA,SAAS,EAAE,OAD4B;AAEvCC,EAAAA,KAAK,EAAE;AACLJ,IAAAA,KAAK,EAAE;AADF;AAFgC,CAA1B,EAKZF,KAAK,CAACI,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkC,OAAlC,CALY,EAKgC,OALhC,CAAf;AAOA;;;;;;;;;;;;;AAcA,SAASG,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\n\n\nlet element = <h1 className='title' style={{ color: 'red' }}>\n  <span>hello</span>\n  world\n</h1>\n\n\nlet element1 = React.createElement('h1', {\n  className: 'title',\n  style: {\n    color: 'red'\n  }\n}, React.createElement('span', null, 'hello'), 'world')\n\n/*\nelement =》 element1 =》 虚拟dom\n1. element 进过 babel 转义成 React.createElement 的形式\n2. React 内部 React.createElement 方法执行后的结果，就是一个虚拟 dom，打印后类似下面结构\n{\n  type: 'h1',\n  props: {\n    children: 'hello'\n  }\n}\n\n*/\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      App\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}